Relatório da terceira entrega (Cadeira de Sistemas Operativos) (16/12/2017)

Este relatório tem como base, o relatório da segunda entrega, não fazendo sentido repetir algumas das funcionalidades que foram referidas nesse mesmo relatório. A realização desta entrega foi feita de modo equilibrado. Sendo o grupo constituído por 2 elementos, um dos elementos fez o admin.c e o outro o sevidor.c e o cliente.c. Os ficheiros memoriaPartilhada.h, semaforos.c e semaforos.h foram criados para auxiliar a criação e manipulação da memória partilhada e dos semáforos, utilizados pelo admin.c e servidor.c. 
No admin.c usamos um array de três semáforos para assegurar o sincronismo entre o admin.c e o servidor.c quando acedem às memórias partilhadas, sendo uma para a memoria partilhada dos utilizadores, outra para acesso à memoria partilhada de viaturas, e uma terceira para escrita no ficheiro servidor.log, feita pelo servidor. Ao guardar a informação da memória partilhada em ficheiros, este não guarda os valores referentes à reserva, no caso da viatura e ao status, no caso do utilizador. A inicialização dos semáforos e da memória partilhada é apenas feita, se esta for criada e não quando já existe. Cada vez que são lidos os ficheiros para a memória partilhada, esta é limpa antes de meter os elementos presentes no ficheiro.
No servidor.c apenas começa se existir previamente uma memória partilhada onde se liga, criando posteriormente a lista de mensagens se esta não existir, mas no caso de esta existir o servidor apaga a mesma e tenta criar novamente, de seguida, cria um novo processo designado fiscal, que verifica se o tempo de reserva já foi ultrapassado, enviando um sinal SIGUSR1 caso isto aconteça, ou se o utilizador da viatura alugada já não tem saldo para a pagar, enviando um sinal SIGUSR2 e passando as viaturas para um estado de “alugado mas o utilizador não tem saldo”, de forma a não serem lançados sinais mais do que uma vez, por outro lado vamos ter o processo principal do servidor em escuta de mensagens para si, escritas pelos clientes, analisando os pedidos feitos e efetuando ações de acordo com os mesmos, requisitando que o cliente esteja online, pedindo que faça login antes de cada ação se este não estiver online no sistema, podendo não lançar pedido nenhum quando o segundo argumento da função “getUserIndexWithID” é igual a ‘0’. O saldo apenas é retirado na entrega do veiculo, e o pedido de finalização de reserva ou de aluguer é efetuada para a primeira viatura que encontrar em nome do utilizador. A escrita no ficheiro servidor.log é feita por uma função, que utiliza um semáforo para haver exclusão mutua.
Os ficheiros timemsg.h, timemsg.c e mensagens.h são utilizadas em ambos servidor.c e cliente.c, sendo o ficheiro mensagens.h responsável pelas estruturas das mensagens e a chave da lista de mensagens, como também são definidas “mascaras” para os estados de mensagens, e o timemsg.c um programa compilado juntamente com o servidor e cliente, com uma função para para concatenar o tempo a uma “string” dada, definida a partir do timemsg.h.
Por ultimo no cliente.c tentamos ligar à lista de mensagens criada pelo servidor, terminando caso não consiga, de seguida pede as credenciais, para se tentar conectar ao servidor, enviando estas para o servidor, podendo apenas continuar e/ou efetuar qualquer ação quando conectado, pedindo ao utilizador futuras ações de acordo com um menu. O cliente está armado para receber sinais do tipo SIGUSR1 e SIGUSR2, tratando dos mesmos escrevendo uma mensagem especifica de acordo com o protocolo criado entre servidor e cliente, sendo estas mensagens informativas acerca das ações feitas pelo fiscal, ou quando o utilizador se encontra sem saldo, no decorrer do aluguer de uma viatura.
